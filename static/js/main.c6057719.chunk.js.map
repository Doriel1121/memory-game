{"version":3,"sources":["components/LevelPage.js","components/Card.js","components/GamePage.js","App.js","reportWebVitals.js","index.js"],"names":["LevelPage","props","componentDidMount","state","className","style","color","fontWeight","to","pathname","amount","PureComponent","Card","console","log","tempCard","clickToFlip","document","getElementById","location","transform","returnedCard","card","name","undefined","id","this","onClick","alt","src","GamePage","cardsList","cards","slice","sort","a","b","Math","random","setState","shuffledCards","countMatch","C","count","FlipBack","id1","id2","tempId","querySelector","display","getTempCard","counter","alert","$","ready","append","setTimeout","startImmediately","Minutes","Seconds","map","element","index","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c6057719.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass LevelPage extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n  }\r\n  componentDidMount = () => {};\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"mainDiv\">\r\n        <div className=\"difficulty\">\r\n          <h1 style={{ color: \"#3bd6a4\", fontWeight: \"900\" }}>Memory Game</h1>\r\n\r\n          <h2 style={{ color: \"#3bd6a4\" }}>Difficulty</h2>\r\n          <Link\r\n            to={{\r\n              pathname: \"/game\",\r\n              state: {\r\n                amount: 5,\r\n              },\r\n            }}\r\n          >\r\n            <button>EASY</button>\r\n          </Link>\r\n          <Link\r\n            to={{\r\n              pathname: \"/game\",\r\n              state: {\r\n                amount: 8,\r\n              },\r\n            }}\r\n          >\r\n            <button>MEDIUM</button>\r\n          </Link>\r\n          <Link\r\n            to={{\r\n              pathname: \"/game\",\r\n              state: {\r\n                amount: 11,\r\n              },\r\n            }}\r\n          >\r\n            <button>HARD</button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LevelPage;\r\n","import React, { PureComponent } from \"react\";\r\n\r\nclass Card extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tempCard: undefined,\r\n      id: undefined,\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    console.log(this.state.tempCard);\r\n  };\r\n\r\n  clickToFlip = () => {\r\n    document.getElementById(this.props.location).style.transform =\r\n      \"rotateY(180deg)\";\r\n    this.props.returnedCard(this.props.card.name, this.props.location);\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state.tempCard);\r\n    return (\r\n      <div\r\n        id={`${this.props.location}`}\r\n        onClick={() => this.clickToFlip()}\r\n        className=\"card\"\r\n      >\r\n        <div className=\"card-face frontCard\">\r\n          <img\r\n            className=\"image\"\r\n            alt=\"pic\"\r\n            src={`./png/${this.props.card.name}.png`}\r\n          />\r\n        </div>\r\n        <div className=\"card-face backCard\">\r\n          {this.props.location % 2 === 0 ? \"Try me!\" : \"Or me\"}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Card;\r\n","import { logDOM } from \"@testing-library/react\";\r\nimport React, { PureComponent } from \"react\";\r\nimport Card from \"./Card\";\r\nimport $ from \"jquery\";\r\nimport Timer from \"react-compound-timer\";\r\n\r\nclass GamePage extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      cards: [\r\n        { name: \"001-youtube\" },\r\n        { name: \"002-yelp\" },\r\n        { name: \"003-wordpress\" },\r\n        { name: \"004-wikipedia\" },\r\n        { name: \"005-whatsapp\" },\r\n        { name: \"006-vine\" },\r\n        { name: \"007-vimeo\" },\r\n        { name: \"008-twitter\" },\r\n        { name: \"009-tumblr\" },\r\n        { name: \"010-trello\" },\r\n        { name: \"011-stumbleupon\" },\r\n        { name: \"012-spotify\" },\r\n        { name: \"013-soundcloud\" },\r\n        { name: \"014-snapchat\" },\r\n        { name: \"015-skype\" },\r\n        { name: \"016-shutterstock\" },\r\n        { name: \"017-scribd\" },\r\n        { name: \"018-reddit\" },\r\n        { name: \"019-quora\" },\r\n        { name: \"020-plaxo\" },\r\n      ],\r\n      shuffledCards: [],\r\n      tempCard: \"\",\r\n      tempId: \"\",\r\n      counter: 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    var cardsList;\r\n    switch (this.props.location.state.amount) {\r\n      case 5:\r\n        cardsList = this.state.cards.slice(0, 5);\r\n        break;\r\n      case 8:\r\n        cardsList = this.state.cards.slice(0, 8);\r\n        break;\r\n      default:\r\n        cardsList = this.state.cards.slice(0, 11);\r\n        break;\r\n    }\r\n    cardsList = [...cardsList, ...cardsList];\r\n    cardsList.sort((a, b) => 0.5 - Math.random());\r\n    this.setState({ shuffledCards: cardsList });\r\n  };\r\n\r\n  countMatch = (C) => {\r\n    console.log(C);\r\n    this.setState({ count: C });\r\n  };\r\n\r\n  FlipBack = (id1, id2) => {\r\n    document.getElementById(id1).style.transform = \"rotateY(0deg)\";\r\n    document.getElementById(id2).style.transform = \"rotateY(0deg)\";\r\n    this.setState({ tempCard: \"\", tempId: \"\" });\r\n    document.querySelector(\".noclick\").style.display = \"none\";\r\n  };\r\n\r\n  getTempCard = (card, id) => {\r\n    let counter = this.state.counter;\r\n    if (this.state.tempCard === \"\") {\r\n      this.setState({ tempCard: card, tempId: id });\r\n    } else if (card === this.state.tempCard) {\r\n      counter++;\r\n      if (counter === this.props.location.state.amount) {\r\n        alert(\"Yoy have greate memory\");\r\n      }\r\n      this.setState({ tempCard: \"\", tempId: \"\", counter: counter });\r\n    } else if (card !== this.state.tempCard) {\r\n      $(document).ready(function () {\r\n        $(\"body\").append('<div class=\"noclick\" />');\r\n        document.querySelector(\".noclick\").style.display = \"block\";\r\n      });\r\n\r\n      setTimeout(() => {\r\n        this.FlipBack(id, this.state.tempId);\r\n      }, 1500);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state.counter);\r\n    return (\r\n      <div>\r\n        <div id=\"header\">\r\n          <h2 id=\"headerCounter\">Score:{this.state.counter}</h2>\r\n          <h2>\r\n            Time:{\" \"}\r\n            <span style={{ color: \"grey\" }}>\r\n              <Timer startImmediately={true}>\r\n                <Timer.Minutes />:\r\n                <Timer.Seconds />\r\n              </Timer>\r\n            </span>\r\n          </h2>\r\n        </div>\r\n        <div className=\"cardParentDiv\">\r\n          {this.state.shuffledCards.map((element, index) => {\r\n            console.log(index);\r\n            return (\r\n              <div className=\"scene\" key={index}>\r\n                <Card\r\n                  returnedCard={this.getTempCard}\r\n                  counter={this.countMatch}\r\n                  card={element}\r\n                  location={index}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GamePage;\r\n","import React, { PureComponent } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport LevelPage from \"./components/LevelPage\";\nimport GamePage from \"./components/GamePage\";\n\nclass App extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div id=\"App\">\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={LevelPage}></Route>\n\n            <Route exact path=\"/game\" component={GamePage}></Route>\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}